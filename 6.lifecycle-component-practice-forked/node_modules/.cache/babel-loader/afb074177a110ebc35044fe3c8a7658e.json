{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ACER/Desktop/fundamental-react/6.lifecycle-component-practice-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ACER/Desktop/fundamental-react/6.lifecycle-component-practice-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nfunction getRepositories() {\n  return _getRepositories.apply(this, arguments);\n}\n\nfunction _getRepositories() {\n  _getRepositories = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var language,\n        response,\n        responseJson,\n        _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            language = _args.length > 0 && _args[0] !== undefined ? _args[0] : 'all';\n            _context.next = 3;\n            return fetch(\"https://api.github.com/legacy/repos/search/dicoding-academy?language=\".concat(language));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            responseJson = _context.sent;\n            return _context.abrupt(\"return\", responseJson.repositories);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getRepositories.apply(this, arguments);\n}\n\nexport { getRepositories };","map":{"version":3,"names":["getRepositories","language","fetch","response","json","responseJson","repositories"],"sources":["C:/Users/ACER/Desktop/fundamental-react/6.lifecycle-component-practice-forked/src/utils/api.js"],"sourcesContent":["async function getRepositories(language = 'all') {\n  const response = await fetch(`https://api.github.com/legacy/repos/search/dicoding-academy?language=${language}`);\n  const responseJson = await response.json();\n  return responseJson.repositories;\n}\n\nexport { getRepositories };\n"],"mappings":";;;SAAeA,e;;;;;gFAAf;IAAA;IAAA;IAAA;IAAA;IAAA;MAAA;QAAA;UAAA;YAA+BC,QAA/B,2DAA0C,KAA1C;YAAA;YAAA,OACyBC,KAAK,gFAAyED,QAAzE,EAD9B;;UAAA;YACQE,QADR;YAAA;YAAA,OAE6BA,QAAQ,CAACC,IAAT,EAF7B;;UAAA;YAEQC,YAFR;YAAA,iCAGSA,YAAY,CAACC,YAHtB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAMA,SAASN,eAAT"},"metadata":{},"sourceType":"module"}